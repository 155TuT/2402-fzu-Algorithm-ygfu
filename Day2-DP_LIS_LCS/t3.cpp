/*
t3 01背包
分数 20
作者 陈晓梅
单位 广东外语外贸大学
给定n(n<=100)种物品和一个背包。物品i的重量是wi(wi<=100)，价值为vi(vi<=100)，背包的容量为C(C<=1000)。
应如何选择装入背包中的物品，使得装入背包中物品的总价值最大? 在选择装入背包的物品时，对每种物品i只有两个选择：装入或不装入。不能将物品i装入多次，也不能只装入部分物品i。

输入格式:
共有n+1行输入：
第一行为n值和c值，表示n件物品和背包容量c；
接下来的n行，每行有两个数据，分别表示第i(1≤i≤n)件物品的重量和价值。

输出格式:
输出装入背包中物品的最大总价值。

输入样例:
在这里给出一组输入。例如：
5 10
2 6
2 3
6 5
5 4
4 6

输出样例:
在这里给出相应的输出。例如：
15

代码长度限制 16 KB
时间限制 400 ms
内存限制 64 MB
栈限制 8192 KB
*/
#include <iostream>
#include <vector>
using namespace std;
int main(){
    int n, c;
    cin >> n >> c;
    vector<int> w(n, 0), v(n, 0), dp(c + 1, 0);
    for(int i = 0; i < n; i++)
        cin >> w[i] >> v[i];
    for(int i = 0; i < n; i++)
        for(int j = c; j >= w[i]; j--)
            dp[j] = dp[j] > dp[j - w[i]] + v[i] ? dp[j] : dp[j - w[i]] + v[i];
    cout << dp[c];
    return 0;
}